generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String

  cartItems CartItem[]
  orders    Order[]
}

model Product {
  id           String     @id @default(uuid())
  imageUrl     String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String     @unique
  quantityLeft Int
  price        Int
  description  String
  cartItems    CartItem[]
}

model Order {
  id         String     @id @default(uuid())
  price      Int
  creator    User       @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId  String
  // product    Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  // productId  String
  // varient    Varient? @relation(fields: [varientId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  successful Boolean // varientId  String?
  // tx_id      String     @unique
  cartItems  CartItem[]
}

model CartItem {
  id        String  @id @default(uuid())
  creator   User    @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String
  quantity  Int     @default(1)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String
  order     Order?  @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId   String?
}
